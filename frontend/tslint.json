{
  "extends": [
    "tslint:recommended",
    "tslint-react",
    "tslint-config-prettier"
  ],
  "rulesDirectory": [
    "tslint-plugin-prettier"
  ],
  "linterOptions": {
    "exclude": ["**/*.js"]
  },
  "rules": {
    "jsx-use-translation-function": false,
    "jsx-alignment": false,
    "jsx-wrap-multiline": false,
    "jsx-no-multiline-js": false,
    "jsx-no-lambda": false,
    "jsx-boolean-value": false,
    "jsx-curly-spacing": [true, "never"],
    "arrow-return-shorthand": true, // 화살표 함수에 {}, return 을 입력 필요하지 않는가
    "arrow-parens": false, // 화살표 함수의 인자를 반드시 ()로 묶어야함.
    "callable-types": true, // 익명함수 정의 하는 타입 허용 여부
    "class-name": true, // 클래스명은 카멜케이스가 아니고 스네이크 케이스로 해야함
    "comment-format": [true, "check-space"], // 주석 관련 컨벤션
    "curly": false, // state(if, switch) 에 {} 입력해야 하는가
    "eofline": false, // 파일의 마지막에 빈라인이 있어야함
    // "import-blacklist": false, // 특정 모듈의 하위모듈이 오류발생 여지가 있으면 불러오지 않도록 설정
    "import-spacing": true, // import 구문의 사이 간격 유지
    "indent": [true, "spaces", 2], // indent size 정의
    "interface-over-type-literal": true, // type 보다는 interface 선호
    "label-position": true, // do/for/while/switch 문에서만 label(break, continue) 선호
    "max-line-length": [true, 160], // 한줄 총 길이
    "ordered-imports": false, // import 정렬
    "member-access": false, // 클래스 내부의 멤버에 접근 가능성에 대한 표기 강제
    "member-ordering": [
      // 클래스 내부의 멤버의 순서 정렬 기준 정의
      true,
      {
        "order": [
          "static-field",
          "instance-field",
          "static-method",
          "instance-method"
        ]
      }
    ],
    "no-arg": true, // arguments.callee() 함수 허용하지 않음(익명함수 내부에서 재귀를 하기 위해 사용)
    "no-bitwise": true, // &, | 이외의 비트연산자 허용하지 않음
    "no-console": [true, "debug", "info", "time", "timeEnd", "trace"], // console의 지정된 메서드의 허용하지 않음
    "no-construct": true, // String, Number, Boolean 생성자 허용하지 않음
    "no-debugger": true, // debugger 문을 허용하지 않음
    "no-duplicate-super": true, // super() 생성자가 두번 나오면 경고
    "no-empty": false, // 빈 블록을 허용하지 않음
    "no-empty-interface": false, // 빈 interface 를 허용하지 않음
    "no-eval": true, // eval() 함수를 허용하지 않음
    "no-inferrable-types": [true, "ignore-params"], // number, string, boolean 의 명시하지 않아도 됨(params 제외)
    "no-misused-new": true, // interface를 new 키워드를 통해 생성하지 않기
    "no-submodule-imports": false,
    "no-implicit-dependencies": false,
    "no-non-null-assertion": true, // Non-null assertions 를 허용하지 않음
    "no-shadowed-variable": true, // 로컬 변수와 상위 로컬 변수간 같은 이름으로 선언하는 것을 허용하지 않음
    "no-string-literal": false, // Object['asdf'] 방식의 접근을 허용하지 않음
    "no-string-throw": true, // throw 문에 문자열만 쓰지 않기
    "no-switch-case-fall-through": true, // switch 문에서 빈 case 사용하지 않기(사용시 /* falls through */ 추가)
    "no-trailing-whitespace": false, // 줄 끝에 공백문자를 허용하지 않기
    "no-unnecessary-initializer": true, // undefined 으로 초기화 하지 않기
    "no-unused-expression": [true, "allow-fast-null-checks"], // 사용하지 않는 표현식이 있는지 체크
    "no-var-keyword": true, // var 키워드를 사용하지 않음
    "object-literal-sort-keys": false, // 객체 내부 key 정렬
    "one-line": [
      // 쌍이되는 구문의 첫구문의 끝 (}) 와 시작(예를 들면 ...} else ...) 이 같은 줄에 있어야 함
      true,
      "check-open-brace",
      "check-catch",
      "check-whitespace"
    ],
    "prefer-const": true, // 변수 선언은 const 로 해야함
    "quotemark": false, // '' 쿼터 마크만 허용
    "radix": false, // parseInt 사용시 parsInt(x, 10) 이렇게 써야함(진수 표기)
    "semicolon": [true, "never"], // semicolon 활용
    "triple-equals": [true, "allow-null-check"], // ===(equals) 체크 혀용
    "typedef-whitespace": [
      // 타입 정의 앞에 공백활용 여부
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "variable-declaration": "nospace"
      }
    ],
    "unified-signatures": true, // 오버라이딩 할 경우 rest parameter 일 경우 인자를 나눌 수 없음
    "variable-name": false, // 변수 이름 에 대한 규정
    "whitespace": [
      // 공백 스타일 규정
      true,
      "check-decl",
      "check-separator",
      "check-branch"
    ],
    "trailing-comma": false, // 콤마 사용 규정
    "await-promise": [false],
    "deprecation": false,
    "no-floating-promises": false,
    "no-unnecessary-class": false,
    "no-unnecessary-type-assertion": false,
    "strict-type-predicates": false,
    "no-unnecessary-qualifier": false,
    "prettier": [true, ".prettierrc"]
  }
}
